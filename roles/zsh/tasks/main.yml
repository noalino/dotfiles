---
- name: Install zsh dependencies
  become: '{{ ansible_facts.distribution != "MacOSX" }}'
  ansible.builtin.package:
    name: git
    state: present
 
# MacOS comes with zsh pre-installed
- name: Install zsh dependencies for Ubuntu
  become: true
  ansible.builtin.package:
    name: zsh
    state: present
  when: ansible_facts.distribution == "Ubuntu"

- name: Set zsh as the default user shell for Ubuntu
  become: true
  ansible.builtin.user:
    name: '{{ ansible_facts.user_id }}'
    shell: /usr/bin/zsh
  when: ansible_facts.distribution == "Ubuntu"

- name: Set zsh as the default user shell for MacOS
  become: true
  ansible.builtin.user:
    name: '{{ ansible_facts.user_id }}'
    shell: /bin/zsh
  when: ansible_facts.distribution == "MacOSX"

- name: Ensure directory exists
  ansible.builtin.file:
    path: '{{ zsh_dir }}'
    state: directory

- name: Create zshenv file
  ansible.builtin.template:
    src: zsh/zshenv.j2
    # Need to be at the user root
    dest: '{{ ansible_facts.user_dir }}/.zshenv'
    backup: true
    mode: 'u=rw,go=r'

- name: Create zsh config files
  ansible.builtin.template:
    src: '{{ item }}'
    dest: '{{ zsh_dir }}/.{{ item | basename | regex_replace("\.j2$", "")}}'
    backup: true
    mode: 'u=rw,go=r'
  # Exclude zshenv file
  with_fileglob: '{{ lookup("fileglob", "templates/zsh/*.j2", wantlist=true) | reject("search", "zshenv") | list }}'

- name: Copy config files
  ansible.builtin.copy:
    src: ./
    dest: '{{ zsh_dir }}'
    mode: 'u=rw,go=r'

- name: Install zsh plugins
  ansible.builtin.git:
    repo: '{{ item.repo }}'
    dest: '{{ zsh_dir }}/plugins/{{ item.name }}'
  loop: '{{ zsh_plugins }}'
